package com.salim.mydevicetracker.networking

import com.salim.mydevicetracker.devices.Devices
import com.salim.mydevicetracker.devices.DevicesSchema
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import com.squareup.moshi.kotlin.reflect.KotlinJsonAdapterFactory

/***
 * This is the fake api service that we will be using in assignment, in place of the real
 * api service that would normally have generated by Retrofit. @see [DeviceApiService]
 */
class FakeApiService: DeviceApiService {

    private fun returnFakeJson(): String {
        return "[\n" +
                "{\n" +
                "\"Id\": \"1234\",\n" +
                "\"Type\": \"Sensor\",\n" +
                "\"Price\": 20,\n" +
                "\"Currency\": \"USD\",\n" +
                "\"isFavorite\": false,\n" +
                "\"imageUrl\": \"\",\n" +
                "\"Title\": \"Test Sensor\",\n" +
                "\"Description\": \"\",\n" +
                "\"IsOnline\": true\n" +
                "},\n" +
                "{\n" +
                "\"Id\": \"1235\",\n" +
                "\"Type\": \"Thermostat\",\n" +
                "\"Price\": 25,\n" +
                "\"Currency\": \"USD\",\n" +
                "\"isFavorite\": false,\n" +
                "\"imageUrl\": \"\",\n" +
                "\"Title\": \"Test Thermostat\",\n" +
                "\"Description\": \"\",\n" +
                "\"IsOnline\": false\n" +
                "}, \n" +
                "{\n" +
                "\"Id\": \"1235\",\n" +
                "\"Type\": \"Camera\",\n" +
                "\"Price\": 25,\n" +
                "\"Currency\": \"USD\",\n" +
                "\"isFavorite\": false,\n" +
                "\"imageUrl\": \"\",\n" +
                "\"Title\": \"Test Security Camera\",\n" +
                "\"Description\": \"\",\n" +
                "\"IsOnline\": true\n" +
                "}\n" +
                "]"
    }

    override suspend fun getListOfDevices(): List<DevicesSchema> {
        val moshi = Moshi.Builder().add(KotlinJsonAdapterFactory()).build()
        val type = Types.newParameterizedType(List::class.java, DevicesSchema::class.java)
        return moshi.adapter<List<DevicesSchema>>(type).fromJson(returnFakeJson()) ?: listOf()
    }
}